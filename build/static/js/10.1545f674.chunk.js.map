{"version":3,"sources":["components/Button/styled.jsx","services/api/api.js","utils/index.js","components/Form/styled.jsx","components/TitleBar/styled.jsx","components/TitleBar/index.jsx","components/Content/styled.jsx","components/Content/index.jsx","components/Card/styled.jsx","components/Card/index.jsx","components/CardTitle/styled.jsx","components/CardTitle/index.jsx","components/Form/LabelInput.jsx","components/Messages/styled.jsx","components/Messages/index.jsx","components/Spinner/styled.jsx","components/Spinner/index.jsx","components/Button/BtnBlue.jsx","components/Button/BtnBox.jsx","components/CardBody/styled.jsx","components/CardBody/index.jsx","components/Table/styled.jsx","components/Table/index.jsx","services/api/reports.js","services/api/reportCards.js","components/Form/LabelSelect.jsx","components/Form/LabelCheckbox.jsx","pages/ReportsUserStore/validation.js","pages/ReportsUserStore/index.jsx"],"names":["Standart","styled","button","Button","BtnBlue","BtnRed","BtnOrange","BtnWhite","StandartLink","Link","LinkButton","SmallLink","LinkBlue","SmLinkBlue","BtnBox","div","api","axios","create","baseURL","config","envApi","interceptors","request","use","a","token","getToken","headers","Authorization","setErrors","error","response","data","errors","message","Label","InputGroup","InputLabel","SelectLabel","CheckboxLabel","dragActive","css","dragReject","DropContainer","attrs","className","props","idDragActive","isDragReject","messageColors","default","success","UploadMessage","p","type","DropBox","Background","TitleBar","Breadcrumb","ul","Component","label","breadcrumb","map","item","index","to","path","currentPage","Content","children","Card","CardTitle","title","name","flexGrow","readOnly","variant","formik","htmlFor","touched","id","value","values","onChange","handleChange","Message","formMessages","alert","length","Spinner","onClick","CardBody","Table","table","handleReportsByUserWithCard","userId","post","user_id","handleReportById","get","handleReport","reportId","report_id","handleStoreReport","history","setMessages","card","JSON","parse","group_id","dataset_id","roles","page_navigation","push","messages","handleUpdateReport","put","handleReportDelete","delete","handleCards","firmId","firm_id","handleCardShow","handleReportCardsByFirm","handleReportCardsStore","handleCardReport","cardId","handleCardDelete","handleCardUpdateFile","FormData","append","checked","defaultChecked","Validation","yup","number","required","string","Page","params","useParams","useState","user","setUser","cards","setCards","useEffect","Promise","resolve","getUser","then","res","useHistory","useFormik","initialValues","validationSchema","Yup","onSubmit","email","handleSubmit","Messages","stringify","disabled","isSubmitting"],"mappings":"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","file":"static/js/10.1545f674.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const Standart = styled.button`\n    align-items: center;\n    border: none;\n    border-radius: 30px;\n    color: var(--color-white);\n    display: flex;\n    font-size: 18px;\n    font-weight: bold;\n    justify-content: center;\n    transition: all 0.3s;\n    &:hover {\n        opacity: 0.5;\n        cursor: pointer;\n    }\n    &:focus {\n        outline: 0;\n    }\n`\n\nexport const Button = styled(Standart)`\n    padding: 10px 25px;\n`\n\nexport const BtnBlue = styled(Button)`\n    background-color: var(--color-orange);\n`\nexport const BtnGreen = styled(Button)`\n    background-color: var(--color-green);\n    color: var(--color-font);\n`\nexport const BtnRed = styled(Button)`\n    background-color: var(--color-red);\n`\nexport const BtnOrange = styled(Button)`\n    background-color: var(--color-orange);\n`\nexport const BtnYellow = styled(Button)`\n    background-color: var(--color-yellow);\n    color: var(--color-blue);\n`\nexport const BtnWhite = styled(Button)`\n    background-color: var(--color-white);\n    color: var(--color-font);\n`\n\nexport const StandartLink = styled(Link)`\n    align-items: center;\n    border: none;\n    border-radius: 30px;\n    color: var(--color-white);\n    display:flex;\n    font-size: 18px;\n    font-weight: bold;\n    justify-content: center;\n    transition: all 0.3s;\n    &:hover {\n        opacity: 0.5;\n        cursor: pointer;\n    }\n    &:focus {\n        outline: 0;\n    }\n`\nexport const LinkButton = styled(StandartLink)`\n    padding: 10px 25px;\n    text-decoration: none;\n`\nexport const SmallLink = styled(StandartLink)`\n    padding: 5px 25px;\n`\nexport const LinkBlue = styled(LinkButton)`\n    background-color: var(--color-green);\n`\nexport const LinkYellow = styled(LinkButton)`\n    background-color: var(--color-yellow);\n    color: var(--color-blue);\n`\nexport const SmLinkGreen = styled(SmallLink)`\n    background-color: var(--color-green);\n    color: var(--color-font);\n`\nexport const SmLinkBlue = styled(SmallLink)`\n    background-color: var(--color-orange);\n`\nexport const SmLinkYellow = styled(SmallLink)`\n    background-color: var(--color-yellow);\n    color: var(--color-blue);\n`\n\nexport const BtnBox = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding-top: 30px;\n`","import axios from 'axios'\nimport config from 'config'\nimport { getToken } from 'services/auth'\n\nconst api = axios.create({ baseURL: config.envApi })\n\napi.interceptors.request.use(\n    async config => {\n        const token = getToken()\n        if (token) config.headers.Authorization = `${token}`\n        return config\n    }\n)\n\nexport default api\n","export const setErrors = error => error.response.data.errors.message\n\nexport const cepMask = value =>\n    value.replace(/\\D+/g, '')\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\n        .replace(/(-\\d{3})\\d+?$/, '$1')\n\nexport const phoneMask = value =>\n    value.replace(/\\D+/g, '')\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(\\d{4})-(\\d)(\\d{4})/, '$1$2-$3')\n        .replace(/(-\\d{4})\\d+?$/, '$1')\n\nexport const cnpjMask = value =>\n    value.replace(/\\D/g, '')\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1/$2')\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1')\n\nexport const cnpjUnmask = value =>\n    value.replace(/\\D+/g, '')\n        .replace(/([0-9])/, '$1')\n\nexport const cpfMask = value =>\n    value.replace(/\\D/g, '')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n        .replace(/(-\\d{2})\\d+?$/, '$1')\n\nexport const numberMask = value =>\n    value.replace(/\\D/g, '')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\n\nexport const toMoney = value =>\n    Number(value).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })","import styled, { css } from 'styled-components'\n\nexport const Label = styled.div`\n    display: flex;\n    align-items: center;\n    color: var(--color-font);\n    & div {\n        color: var(--color-red);\n        height: 8px;\n        margin: 0  0 4px 16px;\n        font-size: 12px;\n    }\n`\n\nconst InputGroup = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 16px;\n    & .variant {\n        border: 1px solid var(--color-font);\n        outline: 0;\n        color: var(--color-input);\n    }\n`\n\nexport const InputLabel = styled(InputGroup)`\n    & input {\n        border: 1px solid var(--color-grey);\n        color: var(--color-font);\n        font-size: 16px;\n        padding: 10px 20px;\n        margin-top: 8px;\n        border-radius: 20px;\n        background-color: var(--color-background-input);\n    }\n    & input:focus {\n        outline: 0;\n    }\n`\n\nexport const SelectLabel = styled(InputGroup)`\n    & select {\n        border: 1px solid var(--color-grey);\n        color: var(--color-font);\n        font-size: 16px;\n        padding: 10px 20px;\n        margin-top: 8px;\n        border-radius: 20px;\n        background-color: var(--color-background-input);\n    }\n    & input:focus {\n        outline: 0;\n    }\n`\nexport const CheckboxLabel = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 10px 0;\n    & input {\n        margin-right: 5px;\n    }\n`\n\nconst dragActive = css`\n    border-color: green;\n`\nconst dragReject = css`\n    border-color: red;\n`\nexport const DropContainer = styled.div.attrs({\n    className: 'dropzone'\n})`\n    border-radius: 10px;\n    border: 1px solid var(--color-grey);\n    cursor: pointer;\n    transition: height 0.2s ease;\n    background-color: var(--color-white);\n    height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    ${props => props.idDragActive && dragActive}\n    ${props => props.isDragReject && dragReject}\n`\nconst messageColors = {\n    default: 'var(--color-font)',\n    error: 'var(--color-red)',\n    success: 'var(--color-green)'\n}\nexport const UploadMessage = styled.p`\n    display: flex;\n    color: ${props => messageColors[props.type || 'default']};\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n    margin: 0 !important;\n`\nexport const DropBox = styled.div`\n    background-color: var(--color-background-input);\n    border: 1px solid var(--color-grey);\n    max-width: 450px;\n    width: 100%;\n    border-radius: 20px;\n    padding: 20px;\n    & img {\n        width: 100%;\n        margin-top: 20px;\n        border-radius: 10px;\n    }\n`\n","import styled from 'styled-components'\n\nexport const Background = styled.div`\n    background-color: var(--color-sidebar);\n`\nexport const TitleBar = styled.div`\n    background-color: var(--color-background-title-bar);\n    color: var(--color-blue);\n    height: 80px;\n    padding-left: 60px;\n    display: flex;\n    align-items: center;\n    & h1 {\n        font-size: 24px;\n        color: var(--color-sidebar);\n    }\n`\nexport const Breadcrumb = styled.ul`\n    padding: 2px 0;\n    list-style: none;\n    margin: 0 auto;\n    & li {\n        display: inline;\n        font-size: 16px;\n    }\n    & li + li:before {\n        color: var(--color-font);\n    }\n    & li a {\n        color: var(--color-blue);\n        text-decoration: none;\n        padding: 8px 8px 8px 0;\n        border-radius: 5px;\n    }\n    & li {\n        color: var(--color-font);\n    }\n    & li a:hover {\n        text-decoration: none;\n    }\n`","import { Link } from 'react-router-dom'\nimport { Breadcrumb, TitleBar, Background } from './styled'\n\nconst Component = props => {\n    return (\n        <Background>\n            <TitleBar>\n                <div>\n                    <h1>{props.label}</h1>\n                    <Breadcrumb>\n                        {\n                            props.breadcrumb && props.breadcrumb.map(\n                                (item, index) => <li key={index}><Link to={item.path}>{item.label}</Link>/</li>\n                            )\n                        }\n                        <li>{props.currentPage}</li>\n                    </Breadcrumb>\n                </div>\n            </TitleBar>\n        </Background>\n    )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const Content = styled.div`\n    width: 100%;\n    padding: 0 15px 15px 15px;\n`","import { Content } from './styled'\n\nconst Component = props => {\n    return (\n        <Content>\n            {props.children}\n        </Content>\n    )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const Card = styled.div`\n    background-color: var(--color-background-card);\n    margin: 0 15px 15px 15px;\n    border-radius: 20px;\n    color: var(--color-font);\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n`","import { Card } from './styled'\n\nconst Component = props =>\n    <Card>\n        {props.children}\n    </Card>\n\nexport default Component","import styled from 'styled-components'\n\nexport const CardTitle = styled.div`\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid var(--color-grey);\n    color: var(--color-font);\n    & p {\n        padding: 15px 30px;\n        flex-grow: 1;\n        font-size: 20px;\n        line-height: 24px;\n        font-weight: bold;\n    }\n    & div {\n        padding: 15px;\n    }\n    @media (max-width: 1140px) {\n        & {\n            flex-direction: column;\n        }\n    }\n`","import { CardTitle } from './styled'\n\nconst Component = props => {\n    return (\n        <CardTitle>\n            <p>{props.title}</p>\n            <div>\n                {props.children}\n            </div>\n        </CardTitle>\n    )\n}\n\nexport default Component","import { Label, InputLabel } from './styled'\n\nconst Component = ({ type, name, label, flexGrow, readOnly, variant, formik }) => {    \n    return (\n        <>\n            <InputLabel className={flexGrow ? flexGrow : null}>\n                <Label>\n                    <label htmlFor={name}>{label}</label>\n                    <div>\n                        {formik.touched[name] && formik.errors[name] ?\n                            formik.errors[name] :\n                            null}\n                    </div>\n                </Label>\n                <input\n                    type={!type ? 'text' : type}\n                    id={name}\n                    name={name}\n                    readOnly={readOnly}\n                    className={variant}\n                    value={formik.values[name]}\n                    onChange={formik.handleChange}\n                />\n            </InputLabel>\n        </>\n    )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const Message = styled.div`\n    &.alert-blue,\n    &.alert-red,\n    &.alert-green,\n    &.alert-orange {\n        border-radius: 8px;\n        padding: 12px 16px 12px 24px;\n        margin-bottom: 16px;\n    }\n    &.alert-red {\n        color: #721c24;\n        border: 1px solid #721c24;\n        background-color: #f8d7da;\n    }\n    &.alert-green {\n        color: #155724;\n        border: 1px solid #155724;\n        background-color: #d4edda;\n    }\n    &.alert-blue {\n        color: #004085;\n        border: 1px solid #004085;\n        background-color: #cce5ff;\n    }\n    &.alert-orange {\n        color: #856404;\n        border: 1px solid #856404;\n        background-color: #fff3cd;\n    }\n`","import { Message } from './styled'\n\nconst Component = ({ formMessages, alert }) => {\n    return (\n        formMessages.length > 0 &&\n        <Message className={alert}>\n            {formMessages}\n        </Message>\n    )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const Spinner = styled.div`\n    margin-left: auto;\n    margin-right: auto;\n    width: 24px;\n    height: 24px;\n    border: 5px solid #f3f3f3;\n    border-top: 5px solid var(--color-blue);\n    border-radius: 50%;\n    animation: spin 2s linear infinite;\n    @keyframes spin {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`","import { Spinner } from './styled'\n\nconst Component = () =>\n    <Spinner></Spinner>\n\nexport default Component","import { BtnBlue } from './styled'\n\nconst Component = props => {\n    return (\n        <BtnBlue type={props.type} onClick={props.onClick}>\n            {props.children}\n        </BtnBlue>\n    )\n}\n\nexport default Component","import { BtnBox } from './styled'\n\nconst Component = props => {\n    return (\n        <BtnBox>\n            {props.children}\n        </BtnBox>\n    )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const CardBody = styled.div`\n  padding: 30px 15px 15px;\n`","import { CardBody } from './styled'\n\nconst Component = props => {\n  return (\n    <CardBody>\n      {props.children}\n    </CardBody>\n  )\n}\n\nexport default Component","import styled from 'styled-components'\n\nexport const Table = styled.table`\n    width: 100%;\n    padding: 0 15px 15px;\n    & th {\n        padding: 12px;\n        text-align: left;\n        border-bottom: 1px solid var(--color-grey);\n    }\n    & tr:nth-child(even) {\n        background-color: var(--color-background-input);\n    }\n    & td {\n        padding: 8px;\n    }\n`","import React from 'react'\nimport { Table } from './styled'\n\nconst Component = props => {\n\n    return (\n        <Table>\n            {props.children}\n        </Table>\n    )\n}\n\nexport default Component","import api from './api'\nimport { setErrors } from 'utils'\n\nexport const handleReportsByUser = async userId =>\n  (await api.post(`/reports/list-by-user`, { user_id: userId })).data\n\nexport const handleReportsByUserWithCard = async userId =>\n  (await api.post(`/reports/list-by-user-with-card`, { user_id: userId })).data\n\nexport const handleReportById = async id => (await api.get(`/reports/${id}`)).data\n\nexport const handleReport = async (reportId, userId) =>\n  (await api.post(`/reports/show-by-report`, { report_id: reportId, user_id: userId })).data\n\nexport const handleStoreReport = async (history, data, userId, setMessages) => {\n  const card = JSON.parse(data.card)\n  const values = {\n    user_id: data.user_id,\n    name: card.name,\n    report_id: card.report_id,\n    group_id: card.group_id,\n    dataset_id: card.dataset_id,\n    roles: data.roles,\n    page_navigation: data.page_navigation\n  }\n  try {\n    await api.post(`/reports/store`, values)\n    return history.push(`/usuarios/${userId}/relatorios`)\n  } catch (error) {\n    setMessages({ messages: setErrors(error), alert: 'alert-orange' })\n  }\n}\n\nexport const handleUpdateReport = async (history, data, reportId, userId, setMessages) => {\n  try {\n    await api.put(`/reports/${reportId}/update`, data)\n    return history.push(`/usuarios/${userId}/relatorios`)\n  } catch (error) {\n    setMessages({ messages: setErrors(error), alert: 'alert-orange' })\n  }\n}\n\nexport const handleReportDelete = async (id, userId, history) => {\n  await api.delete(`/reports/${id}`)\n  return history.push(`/usuarios/${userId}/relatorios`)\n}","import api from './api'\nimport { setErrors } from 'utils'\n\nexport const handleCards = async firmId => (await api.post(`/report-cards/list-by-firm`, { firm_id: firmId })).data\n\nexport const handleCardShow = async id => (await api.get(`/report-cards/${id}`)).data\n\nexport const handleReportCardsByFirm = async firmId =>\n  (await api.post(`/report-cards/list-by-firm`, { firm_id: firmId })).data\n\nexport const handleReportCardsStore = async (history, data, firmId, setMessages) => {\n  const values = {\n    \"firm_id\": firmId,\n    \"group_id\": data.group_id,\n    \"report_id\": data.report_id,\n    \"dataset_id\": data.dataset_id,\n    \"name\": data.name\n  }\n  try {\n    const response = await api.post(`/report-cards/store`, values)\n    return history.push(`/cards/${response.data.id}/upload`)\n  } catch (error) {\n    setMessages({ messages: setErrors(error), alert: 'alert-orange' })\n  }\n}\n\nexport const handleCardReport = async (history, data, cardId, setMessages) => {\n  const values = {\n    \"group_id\": data.group_id,\n    \"report_id\": data.report_id,\n    \"dataset_id\": data.dataset_id,\n    \"name\": data.name\n  }\n  try {\n    await api.put(`/report-cards/${cardId}/update`, values)\n    return history.push(`/cards`)\n  } catch (error) {\n    setMessages({ messages: setErrors(error), alert: 'alert-orange' })\n  }\n}\n\nexport const handleCardDelete = async (id, history) => {\n  await api.delete(`/report-cards/${id}`)\n  return history.push(`/cards`)\n}\n\nexport const handleCardUpdateFile = async (data, id) => {\n  const values = new FormData()\n  values.append('file', data)\n  try {\n    await api.put(`/report-cards/${id}/upload`, values)\n    return\n  } catch (error) {\n    return error\n  }\n}","import { Label, SelectLabel } from './styled'\n\nconst Component = ({ name, label, flexGrow, readOnly, variant, formik, children }) => {\n    return (\n        <>\n            <SelectLabel className={flexGrow ? flexGrow : null}>\n                <Label>\n                    <label htmlFor={name}>{label}</label>\n                    <div>\n                        {formik.touched[name] && formik.errors[name] ?\n                            formik.errors[name] :\n                            null}\n                    </div>\n                </Label>\n                <select\n                    id={name}\n                    name={name}\n                    readOnly={readOnly}\n                    className={variant}\n                    value={formik.values[name]}\n                    onChange={formik.handleChange}\n                >\n                    {children}\n                </select>\n            </SelectLabel>\n        </>\n    )\n}\n\nexport default Component","import { Label, CheckboxLabel } from './styled'\n\nconst Component = ({ name, label, formik, checked }) => {\n  return (\n    <>\n      <CheckboxLabel>\n        <input\n          type='checkbox'\n          id={name}\n          name={name}\n          value={formik.values[name]}\n          onChange={formik.handleChange}\n          defaultChecked={checked}\n        />\n        <Label>\n          <label htmlFor={name}>{label}</label>\n          <div>\n            {formik.touched[name] && formik.errors[name] ?\n              formik.errors[name] :\n              null}\n          </div>\n        </Label>\n      </CheckboxLabel>\n    </>\n  )\n}\n\nexport default Component","const Validation = yup => ({\n  user_id: yup.number().required('Campo obrigatório'),\n  card: yup.string().required('Campo obrigatório'),\n  roles: yup.string()\n})\n\nexport default Validation","import { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport Validation from './validation'\nimport { handleStoreReport } from 'services/api/reports'\nimport { handleCards } from 'services/api/reportCards'\nimport { getUser } from 'services/auth'\nimport TitleBar from 'components/TitleBar'\nimport Content from 'components/Content'\nimport Card from 'components/Card'\nimport CardTitle from 'components/CardTitle'\nimport Input from 'components/Form/LabelInput'\nimport Checkbox from 'components/Form/LabelCheckbox'\nimport Select from 'components/Form/LabelSelect'\nimport BtnBlue from 'components/Button/BtnBlue'\nimport Messages from 'components/Messages'\nimport Spinner from 'components/Spinner'\nimport Table from 'components/Table'\nimport CardBody from 'components/CardBody'\nimport BtnBox from 'components/Button/BtnBox'\n\nconst Page = () => {\n  const params = useParams()\n  const [user, setUser] = useState({})\n  const [cards, setCards] = useState([])\n\n  useEffect(() => {\n    (async () => {\n      await new Promise(resolve => resolve(getUser()))\n        .then(async res => {\n          setUser(res.data)\n          return res\n        })\n        .then(async res => await handleCards(res.data.firm_id))\n        .then(async res => setCards(res))\n    })()\n  }, [])\n\n  const [messages, setMessages] = useState({ messages: [], alert: '' })\n  const history = useHistory()\n  const formik = useFormik({\n    initialValues: { user_id: params.id, roles: '', page_navigation: false, card: {} },\n    validationSchema: Yup.object(Validation(Yup)),\n    onSubmit: () => handleStoreReport(history, formik.values, params.id, setMessages)\n  })\n\n  const breadcrumb = [\n    { path: '/usuarios', label: 'Index' },\n    { path: `/usuarios/${params.id}/relatorios`, label: 'Relatórios' }\n  ]\n\n  return (\n    <>\n      <TitleBar label=\"Usuários\" currentPage=\"\" />\n      <Content>\n        <Card>\n          <CardTitle title=\"Usuário\" />\n          <Table>\n            <thead>\n              <tr>\n                <th>Nome</th>\n                <th>Email</th>\n                <th>Permissão</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.roles}</td>\n              </tr>\n            </tbody>\n          </Table>\n        </Card>\n        <Card>\n          <CardTitle title=\"Cadastrar\"></CardTitle>\n          <Content>\n            <CardBody>\n              <form onSubmit={formik.handleSubmit}>\n                <Messages formMessages={messages.messages} alert={messages.alert} />\n                <Select name=\"card\" label=\"Relatórios\" formik={formik}>\n                  <option value=\"\">Selecione...</option>\n                  {cards.map(item => <option key={item.id} value={JSON.stringify(item)}>{item.name}</option>)}\n                </Select>\n                <Input name=\"roles\" label=\"Roles\" formik={formik} />\n                <Checkbox name='page_navigation' label='Habilitar Abas' formik={formik} checked={false} />\n                <BtnBox>\n                  <BtnBlue type=\"submit\" disabled={formik.isSubmitting}>\n                    {formik.isSubmitting ? <Spinner /> : \"Enviar\"}\n                  </BtnBlue>\n                </BtnBox>\n              </form>\n            </CardBody>\n          </Content>\n        </Card>\n      </Content>\n    </>\n  )\n}\n\nexport default Page"],"sourceRoot":""}